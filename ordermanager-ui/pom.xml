<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.pr.ordermanager</groupId>
    <artifactId>ordermanager-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <groupId>com.pr.ordermanager</groupId>
  <artifactId>ordermanager-ui</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>ordermanager-ui</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>21</java.version>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <docker.image.prefix>imageresources1prognimak.azurecr.io</docker.image.prefix>
    <jib-maven-plugin.version>3.3.2</jib-maven-plugin.version>
    <ng.executor>ng</ng.executor>
    <app.baseurl>frontend</app.baseurl>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>


    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <!-- Cloud Eureka -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>ordermanager-ui</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
          <configuration>
            <release>${maven.compiler.source}</release>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/resources/static</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>${basedir}/ui/resources/frontend/invoices/.angular</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>${basedir}/ui/resources/frontend/invoices/dist</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>id-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete>
                  <fileset dir="../docker/frontend" includes="*.jar"/>
                </delete>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>id-install</id>
            <phase>install</phase>
            <configuration>
              <target>
                <copy file="target/${project.artifactId}.jar" tofile="../docker/frontend/${project.artifactId}.jar"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>clean-windows</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <ng.executor>ng.cmd</ng.executor>
      </properties>
    </profile>
    <profile>
      <id>build-angular</id>
      <activation>
       <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>exec-maven-plugin</artifactId>
            <groupId>org.codehaus.mojo</groupId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <id>angular-cli build</id>
                <phase>validate</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/ui/resources/frontend/invoices/node_modules/.bin/${ng.executor}</executable>
                  <arguments>
                    <argument>build</argument>
                    <argument>--output-hashing=none</argument>
                    <!--                <argument>&#45;&#45;prod</argument>-->
                    <!--<argument>&#45;&#45;aot</argument>-->
                    <argument>--build-optimizer</argument>
                    <argument>--base-href=/${app.baseurl}/</argument>
                  </arguments>
                  <workingDirectory>ui/resources/frontend/invoices</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>copy-angular2-dir</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/src/main/resources</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/ui/resources/frontend/invoices/dist</directory>
                      <excludes>
                        <exclude>/node_modules/**</exclude>
                      </excludes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>with-docker-azure</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>jib-maven-plugin</artifactId>
            <groupId>com.google.cloud.tools</groupId>
            <version>${jib-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>id-create-image</id>
                <phase>deploy</phase>
                <goals>
                  <goal>dockerBuild</goal>
                </goals>
                <configuration>
                  <from>
                    <image>mcr.microsoft.com/java/jdk:17-zulu-alpine</image>
                  </from>
                  <to>
                    <image>${docker.image.prefix}/ordermanager-ui</image>
                  </to>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>azure-deploy-frontend</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-webapp-maven-plugin</artifactId>
            <version>2.12.0</version>
            <executions>
              <execution>
                <id>id-azure-deploy</id>
                <phase>install</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <configuration>
              <schemaVersion>v2</schemaVersion>
              <resourceGroup>prognimak-ordermanager-rg</resourceGroup>
              <appName>prognimak-ordermanager-ui</appName>
              <pricingTier>B1</pricingTier>
              <region>westeurope</region>
              <appSettings>
                <property>
                  <name>JAVA_OPTS</name>
                  <value>-Dserver.port=80 -Dbackend.microservice.url=https://prognimak-ordermanager-backend.azurewebsites.net/backend/</value>
                </property>
              </appSettings>
              <runtime>
                <os>Linux</os>
                <javaVersion>Java 17</javaVersion>
                <webContainer>Java SE</webContainer>
              </runtime>
              <deployment>
                <resources>
                  <resource>
                    <directory>${project.basedir}/target</directory>
                    <includes>
                      <include>*-ui.jar</include>
                    </includes>
                  </resource>
                </resources>
              </deployment>
            </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>