<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath/>
	</parent>

	<groupId>com.pr.ordermanager</groupId>
	<artifactId>ordermanager-springboot-starter</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>ordermanager-springboot-starter</name>
	<description>Backed for amgular project</description>

	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<outputFolder>${project.build.directory}/${project.artifactId}
		</outputFolder>
		<docker.image.prefix>myproject</docker.image.prefix>
		<outputFolder>${project.build.directory}/${project.artifactId}
		</outputFolder>
		<spring.boot.version>2.3.4.RELEASE</spring.boot.version>
		<junit4version>4.12</junit4version>
		<junit.jupiter.version>5.6.2</junit.jupiter.version>
		<junit.jupiter.engine.version>5.6.2</junit.jupiter.engine.version>
		<junit.vintage.engine>5.6.2</junit.vintage.engine>
		<junit.platform.version>1.7.0-RC1</junit.platform.version>
		<mockito.junit.jupiter.version>3.3.3</mockito.junit.jupiter.version>
		<postgresql.version>42.2.2</postgresql.version>
		<lo4j2.version>2.8.2</lo4j2.version>
		<hibernate.version>5.4.2.Final</hibernate.version>
		<javax.validator.api.version>2.0.0.Final</javax.validator.api.version>
		<javax.hibernate.validator.version>6.0.15.Final</javax.hibernate.validator.version>
		<jasper.report.version>6.14.0</jasper.report.version>
		<lombok.version>1.18.12</lombok.version>
		<springdoc.openapi.version>1.2.32</springdoc.openapi.version>
		<mockito.version>3.5.9</mockito.version>
	</properties>


	<dependencyManagement>
		<dependencies>
			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax.validator.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${javax.hibernate.validator.version}</version>
			</dependency>

			<!-- log4j2 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${lo4j2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${lo4j2.version}</version>
			</dependency>

			<!-- Postgres -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<!-- JUnit 4 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit4version}</version>
				<scope>test</scope>
			</dependency>
           <!-- JUnit-5 -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-launcher</artifactId>
				<version>${junit.platform.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.jupiter.engine.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-runner</artifactId>
				<version>${junit.platform.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${junit.vintage.engine}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Jasper report-->
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${jasper.report.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- lombock -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Swagger -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc.openapi.version}</version>
			</dependency>

			<!--Mockito -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

<!--			<dependency>-->
<!--				<groupId>org.mockito</groupId>-->
<!--				<artifactId>mockito-all</artifactId>-->
<!--				<version>${mockito.version}</version>-->
<!--				<scope>test</scope>-->
<!--			</dependency>-->

		</dependencies>
	</dependencyManagement>
	

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<!-- Spring Boot Admin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.3.7</version>
				<configuration>
					<skipDockerBuild>true</skipDockerBuild>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/pact/*</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
					processors -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.3.7</version>
					<configuration>
						<skipDockerBuild>true</skipDockerBuild>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>verify</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<failOnError>false</failOnError>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	
	<profiles>
		<profile>
			<id>with-integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includes>
								<include>**/*IT.java</include>
								<include>**/pact/*Test.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>with-docker</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-enforcer-plugin</artifactId>
							<version>3.0.0-M1</version>
							<executions>
								<execution>
									<id>enforce-branch-variable-is-set</id>
									<phase>validate</phase>
									<goals>
										<goal>enforce</goal>
									</goals>
									<configuration>
										<rules>
											<requireEnvironmentVariable>
												<variableName>SCM_BRANCH</variableName>
												<message>SCM_BRANCH must be set! It must contain the current branch name.
													Normaly it is set in the Jenkinsfile.</message>
											</requireEnvironmentVariable>
										</rules>
										<fail>true</fail>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>build-helper-maven-plugin</artifactId>
							<version>3.0.0</version>
							<executions>
								<execution>
									<phase>package</phase>
									<goals>
										<goal>regex-property</goal>
									</goals>
									<configuration>
										<name>docker.branch.name</name>
										<value>${SCM_BRANCH}</value>
										<regex>.*\/</regex>
										<replacement></replacement>
										<failIfNoMatch>false</failIfNoMatch>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>properties-maven-plugin</artifactId>
							<version>1.0.0</version>
							<executions>
								<execution>
									<phase>initialize</phase>
									<goals>
										<goal>read-project-properties</goal>
									</goals>
									<configuration>
										<files>
											<file>
												${project.basedir}/src/main/resources/application.properties
											</file>
										</files>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>io.fabric8</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>0.19.1</version>
							<executions>
								<execution>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>build</goal>
										<goal>push</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<images>
									<image>
										<name>
											${docker_registry}/${project.artifactId}
										</name>
										<build>
											<from>h00244l:5000/java8</from>
											<maintainer>Interseroh</maintainer>
											<tags>
												<tag>
													${docker.branch.name}
												</tag>
											</tags>

											<ports>
												<port>${server.port}</port>
											</ports>
											<cmd>
												<exec>
													<arg>java</arg>
													<arg>-Djava.security.egd=file:/dev/./urandom</arg>
													<arg>-Xmx512M</arg>
													<arg>-jar</arg>
													<arg>
														/maven/${project.artifactId}-${project.version}.jar
													</arg>
													<arg>--spring.config.location=/volume/config/${project.artifactId}.properties</arg>
												</exec>
											</cmd>
											<assembly>
												<descriptorRef>
													artifact-with-dependencies
												</descriptorRef>
											</assembly>
										</build>
									</image>
								</images>
								<authConfig>
									<username>${docker_username}</username>
									<password>${docker_password}</password>
								</authConfig>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>